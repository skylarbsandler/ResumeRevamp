// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResumeRevamp.DataAccess;

#nullable disable

namespace ResumeRevamp.Migrations
{
    [DbContext(typeof(ResumeRevampContext))]
    [Migration("20231116000747_MakeDefinitionNullable")]
    partial class MakeDefinitionNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ResumeRevamp.Models.Definition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DefinitionText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("definition_text");

                    b.Property<string>("PartOfSpeech")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("part_of_speech");

                    b.Property<int?>("WordId")
                        .HasColumnType("integer")
                        .HasColumnName("word_id");

                    b.HasKey("Id")
                        .HasName("pk_definition");

                    b.HasIndex("WordId")
                        .HasDatabaseName("ix_definition_word_id");

                    b.ToTable("definition", (string)null);
                });

            modelBuilder.Entity("ResumeRevamp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<int?>("FavoritesCount")
                        .HasColumnType("integer")
                        .HasColumnName("favorites_count");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ResumeRevamp.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("OriginalWord")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("original_word");

                    b.Property<List<string>>("Synonyms")
                        .HasColumnType("text[]")
                        .HasColumnName("synonyms");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_words");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_words_user_id");

                    b.ToTable("words", (string)null);
                });

            modelBuilder.Entity("ResumeRevamp.Models.Definition", b =>
                {
                    b.HasOne("ResumeRevamp.Models.Word", null)
                        .WithMany("Definitions")
                        .HasForeignKey("WordId")
                        .HasConstraintName("fk_definition_words_word_id");
                });

            modelBuilder.Entity("ResumeRevamp.Models.Word", b =>
                {
                    b.HasOne("ResumeRevamp.Models.User", null)
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_words_users_user_id");
                });

            modelBuilder.Entity("ResumeRevamp.Models.User", b =>
                {
                    b.Navigation("Favorites");
                });

            modelBuilder.Entity("ResumeRevamp.Models.Word", b =>
                {
                    b.Navigation("Definitions");
                });
#pragma warning restore 612, 618
        }
    }
}
